{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form #uppic=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(uppic)\\\">\\r\\n  <input type=\\\"file\\\" name=\\\"img\\\" [(ngModel)]=\\\"uppic.img\\\" (change)=\\\"readUrl($event)\\\">\\r\\n  <input type=\\\"submit\\\" value=\\\"Upload\\\">\\r\\n</form>\\r\\n\\r\\n<ul>\\r\\n  <li>id : {{imgData.id}}</li>\\r\\n  <li>link : {{imgData.link}}</li>\\r\\n  <li>type : {{imgData.type}}</li>\\r\\n  <li>height : {{imgData.height}}</li>\\r\\n  <li>width : {{imgData.width}}</li>\\r\\n</ul>\\r\\n<br>\\r\\n<img width=\\\"500\\\" [src]=\\\"imgData.link\\\">\\r\\n<br>\\r\\n<br><br><br><br>\\r\\n<div *ngFor=\\\"let item of images\\\">\\r\\n  <img width=\\\"500\\\" [src]=\\\"item.link\\\">\\r\\n  <ul>\\r\\n    <li>id : {{item.id}}</li>\\r\\n    <li>link : {{item.link}}</li>\\r\\n    <li>type : {{item.type}}</li>\\r\\n    <li>height : {{item.height}}</li>\\r\\n    <li>width : {{item.width}}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  imgData = {\r\n    id: '',\r\n    link:''\r\n  };\r\n  img:String;\r\n  images;\r\n\r\n  ngOnInit() {\r\n     const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': 'Bearer 7a063b03eb94053bc8c2e87ca8a6257756f0399c'\r\n      })\r\n    }\r\n\r\n    this.http.get(\"https://api.imgur.com/3/account/miwtoo/images\",httpOptions).subscribe(\r\n      getData => {\r\n        console.log(\"GET Request is successful \", getData);\r\n        this.images = getData[\"data\"]\r\n        //console.log(this.imgUrl);\r\n        \r\n      },\r\n      error => {\r\n        console.log(\"Error\", error);\r\n      }\r\n    ); \r\n  }\r\n\r\n  onSubmit(data) {\r\n\r\n    this.img = this.img.substring(22,this.img.length);\r\n    //console.log(this.imgUrl);\r\n     const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': 'Bearer 7a063b03eb94053bc8c2e87ca8a6257756f0399c'\r\n      })\r\n    }\r\n\r\n    this.http.post(\"https://api.imgur.com/3/image\",this.img, httpOptions).subscribe(\r\n      getData => {\r\n        console.log(\"GET Request is successful \", getData);\r\n        this.imgData = getData['data'];\r\n      },\r\n      error => {\r\n        console.log(\"Error\", error);\r\n      }\r\n    ); \r\n\r\n    this.http.get(\"https://api.imgur.com/3/account/miwtoo/images\",httpOptions).subscribe(\r\n      getData => {\r\n        console.log(\"GET Request is successful \", getData);\r\n        this.images = getData[\"data\"]\r\n        //console.log(this.imgUrl);\r\n        \r\n      },\r\n      error => {\r\n        console.log(\"Error\", error);\r\n      }\r\n    ); \r\n  }\r\n\r\n  readUrl(event:any) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n  \r\n      reader.onload = (event: ProgressEvent) => {\r\n        this.img = event.target[\"result\"];\r\n      }\r\n  \r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}